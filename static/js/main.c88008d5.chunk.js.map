{"version":3,"sources":["img/weather/thunderstorm.svg","img/weather/heavy-rain.svg","img/weather/light-rain.svg","img/weather/snow.svg","img/weather/clear.svg","img/weather/cloud.svg","img/bus.svg","img/umbrella.svg","img/mask.svg","Section.tsx","utils/bus.ts","utils/weather.ts","utils/air.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","icons","busType","mapping","_mapping","Object","defineProperty","thunderstorm","heavyRain","lightRain","snow","clear","cloud","bus","Section","_this$props","this","props","className","icon","title","subtitle","loading","children","react_default","a","createElement","Fragment","alt","src","Component","mapWeatherIcon","weatherId","getWeatherDetails","_getWeatherDetails","apply","arguments","_callee","response","weatherResult","weatherTemperature","regenerator_default","wrap","_context","prev","next","fetch","sent","json","list","temp","abrupt","temperature","weather","id","rainy","some","_ref","stop","getAirDetails","_getAirDetails","data","getBusDetails","_x","_getBusDetails","type","direction","now","toCompany","Date","concat","isMorning","getHours","App","state","air","aqi","buses","details","setState","morn","eve","night","day","fromCompany","map","seconds","Math","round","getWeather","getAir","src_Section","assign","umbrella","Array","from","length","floor","_","i","mask","key","slice","join","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c88008d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thunderstorm.58ebab15.svg\";","module.exports = __webpack_public_path__ + \"static/media/heavy-rain.caa6ed2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/light-rain.06661442.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.20ff1fe1.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.a835ff7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.142dc879.svg\";","module.exports = __webpack_public_path__ + \"static/media/bus.e574b9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/umbrella.934ffe5a.svg\";","module.exports = __webpack_public_path__ + \"static/media/mask.c11d3a66.svg\";","import React, { Component } from 'react';\nimport thunderstorm from './img/weather/thunderstorm.svg';\nimport heavyRain from './img/weather/heavy-rain.svg';\nimport lightRain from './img/weather/light-rain.svg';\nimport snow from './img/weather/snow.svg';\nimport clear from './img/weather/clear.svg';\nimport cloud from './img/weather/cloud.svg';\nimport bus from './img/bus.svg';\n\nexport enum icons {\n  thunderstorm,\n  heavyRain,\n  lightRain,\n  snow,\n  clear,\n  cloud,\n\n  bus,\n};\n\nconst mapping = {\n  [icons.thunderstorm]: thunderstorm,\n  [icons.heavyRain]: heavyRain,\n  [icons.lightRain]: lightRain,\n  [icons.snow]: snow,\n  [icons.clear]: clear,\n  [icons.cloud]: cloud,\n\n  [icons.bus]: bus,\n};\n\nclass Section extends Component <{ className: string, icon: icons, title: string, subtitle: string, loading: boolean }> {\n  render() {\n    const {\n      className,\n      icon,\n      title,\n      subtitle,\n      loading,\n      children,\n    } = this.props;\n    return (\n      <section className={className}>\n        {!loading && (\n          <React.Fragment>\n            <img className=\"icon\" alt=\"icon\" src={mapping[icon]} />\n            <h1>{title}</h1>\n            <h3>{subtitle}</h3>\n          </React.Fragment>\n        )}\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","export enum busType {\n  toCompany,\n  fromCompany,\n};\n\nexport default async function getBusDetails(type: busType) {\n  const direction = type === busType.toCompany ? 'work' : 'home';\n  const now = Date.now();\n  const response = await fetch(`https://laysent-daily-transport.now.sh/?direction=${direction}&timestamp=${now}&lat=30.29365&lng=120.16142`);\n  const list: Array<number> = await response.json();\n  return list;\n}\n","import { icons } from '../Section';\n\nfunction mapWeatherIcon(weatherId: number) {\n  if (weatherId >= 200 && weatherId <= 232) {\n    return icons.thunderstorm;\n  } else if (weatherId >= 300 && weatherId <= 321) {\n    return icons.heavyRain;\n  } else if (weatherId >= 500 && weatherId <= 531) {\n    return icons.lightRain;\n  } else if (weatherId >= 600 && weatherId <= 622) {\n    return icons.snow;\n  } else if (weatherId === 800) {\n    return icons.clear;\n  } else if (weatherId >= 801 && weatherId <= 804) {\n    return icons.cloud;\n  }\n  return icons.clear;\n}\ninterface Weather {\n  clouds: number;\n  deg: number;\n  dt: number;\n  humidity: number;\n  pressure: number;\n  speed: number;\n  temp: {\n    day: number;\n    min: number;\n    max: number;\n    night: number;\n    eve: number;\n    morn: number;\n  };\n  weather: Array<{\n    id: number;\n    main: string;\n    icon: string;\n    description: string;\n  }>;\n}\n\ninterface WeatherResponse {\n  city: {\n    id: number;\n    name: string;\n    coord: {\n      lon: number;\n      lat: number;\n    };\n    country: string;\n    population: number;\n  };\n  cnt: number;\n  cod: string;\n  message: number;\n  list: Array<Weather>\n}\n\nexport default async function getWeatherDetails() {\n  // Hit the weather API\n  const weatherApiUrl = 'https://api.openweathermap.org/data/2.5/forecast/daily?lat=30.29365&lon=120.16142&units=metric&cnt=1&appid=d94bcd435b62a031771c35633f9f310a';\n  const response = await fetch(weatherApiUrl);\n  const weatherResult: WeatherResponse = await response.json();\n\n  // Update the tempature\n  const weatherTemperature = weatherResult.list[0].temp;\n  return {\n    temperature: weatherTemperature,    \n    icon: mapWeatherIcon(weatherResult.list[0].weather[0].id),\n    rainy: weatherResult.list[0].weather.some(({ id }) => {\n      const icon = mapWeatherIcon(id);\n      return icon === icons.lightRain || icon === icons.heavyRain;\n    }),\n  };\n}\n","interface Air {\n  aqi: number;\n  attributions: Array<{\n    url: string;\n    name: string;\n  }>;\n  city: {\n    geo: [number, number];\n    name: string;\n    url: string;\n  };\n  debug: {\n    sync: string;\n  };\n  dominentpol: string;\n  iaqi: {\n    co: { v: number };\n    no2: { v: number };\n    o3: { v: number };\n    pm10: { v: number };\n    pm25: { v: number };\n    so2: { v: number };\n    w: { v: number };\n  };\n  idx: number;\n  time: {\n    v: number;\n  };\n}\n\ninterface AirResponse {\n  status: 'ok';\n  data: Air;\n}\n\nexport default async function getAirDetails() {\n  // http://aqicn.org/city/zhejiang/hangzhoushi/chaohuiwuqu/ to get @722\n  const url = 'https://api.waqi.info/feed/@722/?token=877232d674043e76c5ea9037b8772e1aa4dbd702';\n  const response = await fetch(url);\n  const json: AirResponse = await response.json();\n  return json.data;\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Section, { icons } from './Section';\nimport getWeatherDetails from './utils/weather';\nimport getAirDetails from './utils/air';\nimport getBusDetails, { busType } from './utils/bus';\nimport umbrella from './img/umbrella.svg';\nimport mask from './img/mask.svg';\n\nfunction isMorning() {\n  return (new Date()).getHours() <= 10;\n}\n\nclass App extends Component {\n  state = {\n    weather: {\n      loading: true,\n      title: '',\n      subtitle: '',\n      rainy: false,\n      icon: icons.clear,\n    },\n    air: {\n      loading: true,\n      aqi: 0,\n    },\n    buses: [],\n  };\n  async getWeather() {\n    const details = await getWeatherDetails();\n\n    this.setState({\n      weather: {\n        loading: false,\n        title: isMorning() ? details.temperature.morn : details.temperature.eve + ' ° C',\n        subtitle: `${details.temperature.night} ~ ${details.temperature.day}  ° C`,\n        rainy: details.rainy,\n        icon: details.icon,\n      },\n    });\n  }\n  async getAir() {\n    const details = await getAirDetails();\n    this.setState({\n      air: {\n        loading: false,\n        aqi: details.aqi,\n      },\n    });\n  }\n  async getBusDetails() {\n    const type = isMorning() ? busType.toCompany : busType.fromCompany;\n    const buses = await getBusDetails(type);\n    this.setState({\n      buses: buses.map(seconds => Math.round(seconds / 60)),\n    });\n  }\n  componentDidMount() {\n    this.getWeather();\n    this.getAir();\n    this.getBusDetails();\n  }\n  render() {\n    const buses = this.state.buses;\n    return (\n      <main className=\"app\">\n        <Section\n          className=\"weather\"\n          {...this.state.weather}\n        >\n          {this.state.weather.rainy && (\n            <img src={umbrella} alt=\"bring umbrella\" className=\"small-icon left-bottom\" />\n          )}\n          {!this.state.air.loading && (\n            <div className=\"right-bottom\">\n              {Array.from({ length: Math.floor(this.state.air.aqi / 50) }).map((_, i) => (\n                <img src={mask} alt=\"air condition icon\" className=\"small-icon\" key={i} />\n              ))}\n            </div>\n          )}\n        </Section>\n        <Section\n          className=\"transport\"\n          title={buses.length > 0 ? `${buses[0]} min` : '-'}\n          subtitle={buses.length > 1 ? `${buses.slice(1).map(bus => `${bus} min`).join('/')}` : ''}\n          icon={icons.bus}\n          loading={false}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}